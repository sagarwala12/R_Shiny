scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urban_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urban_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = "blues", labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urban_map()
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
devtools::install_github("UI-Research/urbnthemes")
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
devtools::install_github("UI-Research/urbnthemes", build_vignettes = TRUE)
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = "blues", labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
devtools::install_github(“UI-Research/urbnthemes”)
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
devtools::install_github(“UI-Research/urbnthemes”)
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
devtools::install_github("UI-Research/urbnthemes")
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = "blues", labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urban_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = "blues", labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = "blue", labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
shiny::runApp('C:/Users/shala/Desktop/COVID-19 DRAFT')
?tigris
runApp('C:/Users/shala/Desktop/COVID-19 DRAFT')
runApp('C:/Users/shala/Desktop/nCoV_tracker-master')
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#fffff0", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#fffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
#devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
ggplot() +
geom_polygon(data = urbnmapr::states , mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips")
household_data <- left_join(countydata, counties, by = "county_fips")
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
#devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
ggplot() +
geom_polygon(data = urbnmapr::states , mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips")
household_data <- left_join(countydata, counties, by = "county_fips")
household_data <- left_join(countydata, counties, by = "county_fips", copy = TRUE)
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
#devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
ggplot() +
geom_polygon(data = urbnmapr::states , mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips")
household_data %>%
ggplot(aes(long, lat, group = group, fill = medhhincome)) +
geom_polygon(color = NA) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Median Household Income")
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
?urbnmapr
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = pop_dens)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = population)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = density)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = pop_dens)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
library(maps)
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = pop_dens)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
census <- read.csv(file = './census.csv')
census <- read.csv(file = 'census.csv')
census <- read.csv('census.csv')
setwd("C:/Users/shala/Desktop/COVID-19 DRAFT")
census <- read.csv('census.csv')
census <- read.csv('Census.csv')
setwd("C:/Users/shala/Desktop/COVID-19 DRAFT")
tests <- read.csv('tests.csv')
census <- read.csv('Census.csv')
census <- read.csv('Census.csv')
setwd("C:/Users/shala/Desktop/NYCDSA R NOTES")
census <- read.csv('Census.csv')
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = census$Totaltrans)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
shiny::runApp('C:/Users/shala/Desktop/COVID-19 DRAFT')
setwd("C:/Users/shala/Desktop/COVID-19 DRAFT")
runApp()
runApp()
library(tidyverse)
library(dplyr)
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
case_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
zip_list <- read.csv('./data/zip-code-list.csv')
county_list <- read.csv('./data/county-list.csv')
head(cases_state)
head(state_test)
head(cases_age)
head(data)
setwd("C:/Users/shala/Desktop/R_Shiny")
View(data)
View(cases_state)
View(case_sex)
View(cases_age)
View(cases_ethnic)
dplr <- left_join(cases_age, case_sex, by= "date")
View(dplr)
tmp1 <- left_join(cases_age, case_sex, by= "date")
age_sex_ethnic <- left_join(cases_age, case_sex, by= "date")
View(age_sex_ethnic)
View(age_sex_ethnic)
total <- merge(cases_age, case_sex, cases_ethnic, by = "date")
View(cases_age)
tmp <- merge(cases_age, case_sex, by = "date")
View(tmp)
age_ca <- merge(cases_state, cases_age, by = "date")
View(age_ca)
sex_ca <- merge(cases_state, cases_sex, by = "date")
library(tidyverse)
library(dplyr)
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
cases_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
zip_list <- read.csv('./data/zip-code-list.csv')
library(tidyverse)
library(dplyr)
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
cases_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
age_ca <- merge(cases_state, cases_age, by = "date")
sex_ca <- merge(cases_state, cases_sex, by = "date")
View(sex_ca)
View(cases_state)
View(cases_age)
View(case_sex)
View(cases_sex)
ethnic_ca <- merge(cases_state, cases_ethnic, by = "date")
View(ethnic_ca)
View(age_ca)
library(tidyverse)
library(dplyr)
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
cases_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
#indexing age, sex, ethnic background to cases statewide. By using the date as ID we can create separate data frames of each factor by the county it was located within.
ca_age <- merge(cases_state, cases_age, by = "date")
ca_sex <- merge(cases_state, cases_sex, by = "date") %>% select(., )
ca_ethnic <- merge(cases_state, cases_ethnic, by = "date")
View(ca_age)
View(ca_ethnic)
View(ca_sex)
library(tidyverse)
library(dplyr)
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
cases_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
#indexing age, sex, ethnic background to cases statewide. By using the date as ID we can create separate data frames of each factor by the county it was located within.
ca_age <- merge(cases_state, cases_age, by = "date")
ca_sex <- merge(cases_state, cases_sex, by = "date")
ca_ethnic <- merge(cases_state, cases_ethnic, by = "date")
View(ca_sex)
View(cases_state)
ca_ethnic <- merge(cases_state[1:2], cases_ethnic, by = "date")
ca_ethnic <- merge(cases_state[1:2,6], cases_ethnic, by = "date")
ca_ethnic <- merge(cases_state[1,2,6], cases_ethnic, by = "date")
ca_ethnic <- merge(cases_state, cases_ethnic, by = "date")
View(hospitals)
library(shiny)
library(tidyverse)
library(shinydashboard)
library(RColorBrewer)
library(tigris)
library(dplyr)
library(ggplot2)
library(leaflet)
library(plotly)
library(leaflet.providers)
library(htmltools)
#Read csvs
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
cases_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
#indexing age, sex, ethnic background to cases statewide. By using the date as ID we can create separate data frames of each factor by the county it was located within.
ca_age <- merge(cases_state, cases_age, by = "date")
ca_sex <- merge(cases_state, cases_sex, by = "date")
ca_ethnic <- merge(cases_state, cases_ethnic, by = "date")
View(hospitals)
View(cases_state)
View(ca_age)
View(cases_age)
tmp <- cases_state %>%
select(., 'county', 'date') %>%
merge(tmp, cases_age, by = "date")
tmp <- cases_state %>%
select(., 'county', 'date') %>%
merge(tmp, cases_age, by = "date")
tmp1 <- cases_state %>%
select(., 'county', 'date') %>%
merge(tmp, cases_age, by = "date")
tmp1 <- cases_state %>%
select(., 'county', 'date') %>%
merge(tmp1, cases_age, by = "date")
tmp1 <- cases_state %>%
select(., 'county', 'date') %>%
merge(tmp1, cases_age, by = "date")
tmp1 <- select(cases_state, "county", "date")
View(tmp1)
tmp2 <- merge(tmp1, cases_age, by = "date")
View(tmp2)
View(ca_age)
#Read csvs
cases_state <- read.csv('./data/statewide_cases.csv')
state_test <- read.csv('./data/statewide_testing.csv')
cases_age <- read.csv('./data/case_demographics_age.csv')
cases_ethnic<- read.csv('./data/case_demographics_ethnicity.csv')
cases_sex <- read.csv('./data/case_demographics_sex.csv')
hospitals <- read.csv('./data/hospitals_by_county.csv')
tmp1 <-select(cases_state, "county", "date")
ca_age <- merge(tmp1, cases_age, by = "date")
ca_sex <- merge(tmp1, cases_sex, by = "date")
ca_ethnic <- merge(tmp1, cases_ethnic, by = "date")
View(ca_ethnic)
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
#devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
ggplot() +
geom_polygon(data = urbnmapr::states , mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips")
ggplot() +
geom_polygon(data = urbnmapr::states , mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips")
household_data <- left_join(countydata, counties, by = "county_fips", copy = TRUE)
countydata %>%
left_join(counties, by = "county_fips") %>%
filter(state_name =="California") %>%
ggplot(mapping = aes(long, lat, group = group, fill = horate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(labels = scales::percent,
guide = guide_colorbar(title.position = "top")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme(legend.title = element_text(),
legend.key.width = unit(.5, "in")) +
labs(fill = "Homeownership rate") +
theme_urbn_map()
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
#devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
#install.packages('devtools')
#install.packages('ps')
#devtools::install_github("UrbanInstitute/urbnmapr")
#devtools::install_github("UrbanInstitute/urbnthemes")
library(tidyverse)
library(urbnmapr)
library(dplyr)
library(ggplot2)
library(urbnthemes)
ggplot() +
geom_polygon(data = urbnmapr::states , mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips")
household_data <- left_join(countydata, counties, by = "county_fips")
household_data1 <- left_join(countydata, counties, by = "county_fips")
head(countydata)
head(counties)
household_data <- left_join(countydata, counties, by = "county_fips")
